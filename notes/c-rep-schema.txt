These are the relevent models in the eva database


using EvaAPI.Data.Common;

namespace EvaAPI.Data.Models.Committees.CommitteeReports
{
    public class CommitteeReport : TrackableEntity
    {
        public int SessionId { get; set; }
        public int CommitteeId { get; set; }
        public int MeetingId { get; set; } 

        public DateTime MeetingDate { get; set; }
        public string MeetingTime { get; set; }
        public string MeetingLocation { get; set; }

        public bool IsPublished { get; set; }
        public DateTime? PublishedDate { get; set; }
        public string PublishedBy { get; set; }
        public bool IsAttendancePublished { get; set; }
        public DateTime? AttendancePublishedDate { get; set; }
        public DateTime? AddendaDate { get; set; }
        public string AttendancePublishedBy { get; set; }
        public byte[] PublishedReportDocument { get; set; }
        public byte[] PublishedAttendanceReportDocument { get; set; }

        public virtual ICollection<CommitteeReportAgendaItem> AgendaItems { get; set; }

        // Attendance and Joint Committees come directly from the shared DB
    }
}

using EvaAPI.Data.Common;
using System.ComponentModel.DataAnnotations.Schema;

namespace EvaAPI.Data.Models.Committees.CommitteeReports
{
    public class CommitteeReportAction : TrackableEntity
    {
        public int AgendaItemId { get; set; }
        public int? CommitteeReportAgendaItemActionId { get; set; }
        public string ActionText { get; set; }
        public string ActionSubText { get; set; }
        public int SortOrder { get; set; }
        public bool IsRecommendation { get; set; }
        public string CustomRecommendationText { get; set; }
        public string CustomReportOutText { get; set; }
        public bool IsPublished { get; set; }
        [ForeignKey("AgendaItemId")]
        public virtual CommitteeReportAgendaItem AgendaItem { get; set; }
        [ForeignKey("CommitteeReportAgendaItemActionId")]
        public virtual CommitteeReportCommitteeAction CommitteeReportAgendaItemAction { get; set; }
    }
}

using EvaAPI.Data.Common;
using System.ComponentModel.DataAnnotations.Schema;

namespace EvaAPI.Data.Models.Committees.CommitteeReports
{
    public class CommitteeReportAgendaItem : TrackableEntity
    {
        public int ReportId { get; set; }
        public int? CommitteeMeetingAgendaItemId { get; set; }
        public int? LegislationId { get; set; }
        public string Prefix { get; set; }
        public string Identifier { get; set; }
        public string Description { get; set; }
        public int SortOrder { get; set; }
        public bool IsPublished { get; set; }
        [ForeignKey("ReportId")]
        public virtual CommitteeReport Report { get; set; }
        public virtual ICollection<CommitteeReportAction> Actions { get; set; }
        public virtual ICollection<CommitteeReportRollCall> RollCalls { get; set; }
    }
}

using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore;

namespace EvaAPI.Data.Models.Committees.CommitteeReports
{
    public class CommitteeReportCommitteeAction
    {
        public int Id { get; set; }
        public string Description { get; set; }
        public bool IsRecommendation { get; set; }
    }

    public enum COMMITTEE_ACTION_IDS
    {
        BILLPASS = 1,
        SUB = 2,
        IMMEDIATE_EFFECT = 3,
        WHOLE = 4,
        REFERRED = 5,
        JR_ADOPTED = 6,
        RES_ADOPTED = 7,
        CR_ADOPTED = 8,
        SUB_JR_ADOPTED = 9,
        SUB_RES_ADOPTED = 10,
        AMEND_JR_ADOPTED = 11,
        AMEND_RES_ADOPTED = 12,
        AMEND_CONRES_ADOPTED = 13,
        RES_PLACED_RES = 14,
        CONRES_PLACED_RES = 15,
        RES_AND_SUB_PLACED_RES = 16,
        CONRES_AND_SUB_PLACED_RES = 17,
        JRES_COTW = 18,
        JRES_AND_SUB_COTW = 19,
        BILL_COTW = 20,
        JRES_AND_AMEND_COTW = 21
    }

    public static class COMMITTEE_ACTION_DESCRIPTIONS
    {
        public const string BILLPASS = "With recommendation that the bill pass.";
        public const string SUB = "With the recommendation that the substitute (<<freeform>>) be adopted and that the bill then pass.";
        public const string IMMEDIATE_EFFECT = "The committee further recommends that the bill be given immediate effect.";
        public const string WHOLE = "The bill was referred to the Committee of the Whole.";
        public const string REFERRED = "The bill and the substitute recommended by the committee were referred to the Committee of the Whole.";
        public const string JR_ADOPTED = "With the recommendation that the joint resolution be adopted.";
        public const string RES_ADOPTED = "With the recommendation that the resolution be adopted.";
        public const string CR_ADOPTED = "With the recommendation that the concurrent resolution be adopted.";
        public const string SUB_JR_ADOPTED = "With the recommendation that the substitute (<<freeform>>) be adopted and that the joint resolution be adopted.";
        public const string SUB_RES_ADOPTED = "With the recommendation that the substitute (<<freeform>>) be adopted and that the resolution be adopted.";
        public const string AMEND_JR_ADOPTED = "With the recommendation that the following amendment(s) be adopted and that the joint resolution be adopted.";
        public const string AMEND_RES_ADOPTED = "With the recommendation that the following amendment(s) be adopted and that the resolution be adopted";
        public const string AMEND_CONRES_ADOPTED = "With the recommendation that the following amendment(s) be adopted and that the concurrent resolution be adopted";
        public const string RES_PLACED_RES = "The resolution was placed on the order of Resolutions.";
        public const string CONRES_PLACED_RES = "The concurrent resolution was placed on the order of Resolutions.";
        public const string RES_AND_SUB_PLACED_RES = "The resolution and substitute recommended by the Committee were placed on the order of Resolutions.";
        public const string CONRES_AND_SUB_PLACED_RES = "The concurrent resolution and substitute recommended by the Committee were placed on the order of Resolutions.";
        public const string JRES_COTW = "The joint resolution was referred to the Committee of the Whole.";
        public const string JRES_AND_SUB_COTW = "The joint resolution and substitute recommended by the Committee were referred to the Committee of the Whole.";
        public const string BILL_COTW = "The bill and the amendment(s) recommended by the committee were referred to the Committee of the Whole.";
        public const string JRES_AND_AMEND_COTW = "The joint resolution and the amendment(s) recommended by the committee were referred to the Committee of the Whole.";
    }

    public class CommitteeReportCommitteeActionEntityTypeConfiguration : IEntityTypeConfiguration<CommitteeReportCommitteeAction>
    {
        public void Configure(EntityTypeBuilder<CommitteeReportCommitteeAction> builder)
        {
            builder.HasData(
                new
                {
                    Id = (int)COMMITTEE_ACTION_IDS.BILLPASS,
                    Description = COMMITTEE_ACTION_DESCRIPTIONS.BILLPASS,
                    IsRecommendation = true
                },
                new
                {
                    Id = (int)COMMITTEE_ACTION_IDS.SUB,
                    Description = COMMITTEE_ACTION_DESCRIPTIONS.SUB,
                    IsRecommendation = true
                },
                new
                {
                    Id = (int)COMMITTEE_ACTION_IDS.IMMEDIATE_EFFECT,
                    Description = COMMITTEE_ACTION_DESCRIPTIONS.IMMEDIATE_EFFECT,
                    IsRecommendation = true
                },
                new
                {
                    Id = (int)COMMITTEE_ACTION_IDS.WHOLE,
                    Description = COMMITTEE_ACTION_DESCRIPTIONS.WHOLE,
                    IsRecommendation = false
                },
                new
                {
                    Id = (int)COMMITTEE_ACTION_IDS.REFERRED,
                    Description = COMMITTEE_ACTION_DESCRIPTIONS.REFERRED,
                    IsRecommendation = false
                },
                new
                {
                    Id = (int)COMMITTEE_ACTION_IDS.JR_ADOPTED,
                    Description = COMMITTEE_ACTION_DESCRIPTIONS.JR_ADOPTED,
                    IsRecommendation = true
                },
                new
                {
                    Id = (int)COMMITTEE_ACTION_IDS.RES_ADOPTED,
                    Description = COMMITTEE_ACTION_DESCRIPTIONS.RES_ADOPTED,
                    IsRecommendation = true
                },
                new
                {
                    Id = (int)COMMITTEE_ACTION_IDS.CR_ADOPTED,
                    Description = COMMITTEE_ACTION_DESCRIPTIONS.CR_ADOPTED,
                    IsRecommendation = true
                },
                new
                {
                    Id = (int)COMMITTEE_ACTION_IDS.SUB_JR_ADOPTED,
                    Description = COMMITTEE_ACTION_DESCRIPTIONS.SUB_JR_ADOPTED,
                    IsRecommendation = true
                },
                new
                {
                    Id = (int)COMMITTEE_ACTION_IDS.SUB_RES_ADOPTED,
                    Description = COMMITTEE_ACTION_DESCRIPTIONS.SUB_RES_ADOPTED,
                    IsRecommendation = true
                },
                new
                {
                    Id = (int)COMMITTEE_ACTION_IDS.AMEND_JR_ADOPTED,
                    Description = COMMITTEE_ACTION_DESCRIPTIONS.AMEND_JR_ADOPTED,
                    IsRecommendation = true
                },
                new
                {
                    Id = (int)COMMITTEE_ACTION_IDS.AMEND_RES_ADOPTED,
                    Description = COMMITTEE_ACTION_DESCRIPTIONS.AMEND_RES_ADOPTED,
                    IsRecommendation = true
                },
                new
                {
                    Id = (int)COMMITTEE_ACTION_IDS.AMEND_CONRES_ADOPTED,
                    Description = COMMITTEE_ACTION_DESCRIPTIONS.AMEND_CONRES_ADOPTED,
                    IsRecommendation = true
                },
                new
                {
                    Id = (int)COMMITTEE_ACTION_IDS.RES_PLACED_RES,
                    Description = COMMITTEE_ACTION_DESCRIPTIONS.RES_PLACED_RES,
                    IsRecommendation = false
                },
                new
                {
                    Id = (int)COMMITTEE_ACTION_IDS.CONRES_PLACED_RES,
                    Description = COMMITTEE_ACTION_DESCRIPTIONS.CONRES_PLACED_RES,
                    IsRecommendation = false
                },
                new
                {
                    Id = (int)COMMITTEE_ACTION_IDS.RES_AND_SUB_PLACED_RES,
                    Description = COMMITTEE_ACTION_DESCRIPTIONS.RES_AND_SUB_PLACED_RES,
                    IsRecommendation = false
                },
                new
                {
                    Id = (int)COMMITTEE_ACTION_IDS.CONRES_AND_SUB_PLACED_RES,
                    Description = COMMITTEE_ACTION_DESCRIPTIONS.CONRES_AND_SUB_PLACED_RES,
                    IsRecommendation = false
                },
                new
                {
                    Id = (int)COMMITTEE_ACTION_IDS.JRES_COTW,
                    Description = COMMITTEE_ACTION_DESCRIPTIONS.JRES_COTW,
                    IsRecommendation = false
                },
                new
                {
                    Id = (int)COMMITTEE_ACTION_IDS.JRES_AND_SUB_COTW,
                    Description = COMMITTEE_ACTION_DESCRIPTIONS.JRES_AND_SUB_COTW,
                    IsRecommendation = false
                },
                new
                {
                    Id = (int)COMMITTEE_ACTION_IDS.BILL_COTW,
                    Description = COMMITTEE_ACTION_DESCRIPTIONS.BILL_COTW,
                    IsRecommendation = false
                },
                new
                {
                    Id = (int)COMMITTEE_ACTION_IDS.JRES_AND_AMEND_COTW,
                    Description = COMMITTEE_ACTION_DESCRIPTIONS.JRES_AND_AMEND_COTW,
                    IsRecommendation = false
                }
            );
        }
    }
}

using EvaAPI.Data.Common;
using System.ComponentModel.DataAnnotations.Schema;

namespace EvaAPI.Data.Models.Committees.CommitteeReports
{
    public class CommitteeReportRollCall : TrackableEntity
    {
        public int SessionId { get; set; }
        public int CommitteeId { get; set; }
        public int MeetingId { get; set; }
        public int MemberId { get; set; }
        public int AgendaItemId { get; set; }
        public string RollCallVote { get; set; }
        public DateTime? PublishedDate { get; set; }
        public DateTime? AddendaDate { get; set; }
        public string PublishedBy { get; set; }
        [ForeignKey("AgendaItemId")]
        public virtual CommitteeReportAgendaItem AgendaItem { get; set; }
    }

    public static class RollCallVoteTypes
    {
        public const string YAY = "Yea";
        public const string NAY = "Nay";
        public const string PASS = "Pass";
        public const string NA = "N/A";
    }
}

